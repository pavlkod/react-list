{"version":3,"sources":["components/Loader/index.js","components/HeadLine/index.js","components/TableItem/index.js","components/Table/index.js","reducer/types.js","reducer/actionCreators.js","reducer/index.js","reducer/state.js","components/RowInfo/index.js","components/ModeSelect/index.js","components/TableSearch/index.js","App.js","api/index.js","index.js"],"names":["Loader","align","color","className","role","HeadLine","field","onSort","useState","order","setOrder","onClick","direction","cn","TableItem","item","data-item","JSON","stringify","id","firstName","lastName","email","phone","Table","items","onGetItem","map","e","SHOW_ERROR","HIDE_ERROR","SHOW_LOADING","HIDE_LOADING","FETCH_DATA","SET_SORT_FIELDS","SET_ROW_INFO","SET_MODE_SELECTED","SET_CURRENT_PAGE","SET_SEARCH_WORD","fetchData","data","type","payload","showError","setCurrentPage","rootReducer","state","action","loading","error","sort","rowInfo","modeSelected","currentPage","search","initialState","RowInfo","info","ModeSelect","onSelect","TableSearch","onSearch","setSearch","placeholder","aria-label","aria-describedby","value","onChange","target","App","useReducer","dispatch","getItems","url","a","fetch","response","json","orderBy","count","URL","searchParams","set","startIndex","filteredData","filter","toLowerCase","includes","getFilteredItems","chunkData","slice","setSortFields","event","tr","closest","tagName","parse","dataset","length","previousLabel","nextLabel","breakLabel","breakClassName","breakLinkClassName","pageCount","Math","ceil","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selected","containerClassName","activeClassName","pageClassName","pageLinkClassName","previousClassName","nextClassName","previousLinkClassName","nextLinkClassName","forcePage","Object","keys","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0df37d0.chunk.js","sourcesContent":["export const Loader = ({ align = \"left\", color = \"info\" }) => {\r\n  return (\r\n    <div className={`text-${align}`}>\r\n      <div className={`spinner-border text-${color}`} role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\n\r\nimport cn from \"classnames\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst HeadLine = ({ field, onSort }) => {\r\n  const [order, setOrder] = useState(\"desc\");\r\n  const onSortHandler = () => {\r\n    const direction = order === \"desc\" ? \"asc\" : \"desc\";\r\n    setOrder(direction);\r\n    onSort(field, direction);\r\n  };\r\n\r\n  return (\r\n    <th onClick={onSortHandler}>\r\n      {field}&nbsp;\r\n      <span className={cn(\"dropdown-toggle\", order)}></span>\r\n    </th>\r\n  );\r\n};\r\nexport { HeadLine };\r\n","const TableItem = ({ item }) => {\r\n  return (\r\n    <tr data-item={JSON.stringify(item)}>\r\n      <td>{item.id}</td>\r\n      <td>{item.firstName}</td>\r\n      <td>{item.lastName}</td>\r\n      <td>{item.email}</td>\r\n      <td>{item.phone}</td>\r\n    </tr>\r\n  );\r\n};\r\nexport { TableItem };\r\n","import PropTypes from \"prop-types\";\r\nimport { HeadLine } from \"../HeadLine\";\r\n\r\nimport { TableItem } from \"../TableItem\";\r\n\r\nconst Table = ({ items = [], onSort, onGetItem }) => {\r\n  const fields = [\"id\", \"firstName\", \"lastName\", \"email\", \"phone\"];\r\n  const onClickHandler = e => {\r\n    onGetItem && onGetItem(e);\r\n  };\r\n  return (\r\n    <table className=\"table\">\r\n      <thead>\r\n        <tr>\r\n          {fields.map(field => (\r\n            <HeadLine key={field} field={field} onSort={onSort} />\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n      <tbody onClick={onClickHandler}>\r\n        {items.map(item => (\r\n          <TableItem key={item.id + item.phone} item={item} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nTable.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      firstName: PropTypes.string,\r\n      lastName: PropTypes.string,\r\n      email: PropTypes.string,\r\n      phone: PropTypes.string,\r\n    })\r\n  ).isRequired,\r\n  onSort: PropTypes.func.isRequired,\r\n};\r\n\r\nexport { Table };\r\n","export const SHOW_ERROR = \"SHOW_ERROR\";\r\nexport const HIDE_ERROR = \"HIDE_ERROR\";\r\n\r\nexport const SHOW_LOADING = \"SHOW_LOADING\";\r\nexport const HIDE_LOADING = \"HIDE_LOADING\";\r\n\r\nexport const FETCH_DATA = \"FETCH_DATA\";\r\n\r\nexport const SORT_DATA = \"SORT_DATA\";\r\nexport const SET_SORT_FIELDS = \"SET_SORT_FIELDS\";\r\n\r\nexport const SET_ROW_INFO = \"SET_ROW_INFO\";\r\nexport const SET_MODE_SELECTED = \"SET_MODE_SELECTED\";\r\n\r\nexport const SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nexport const SET_SEARCH_WORD = \"SET_SEARCH_WORD\";\r\n","import {\r\n  FETCH_DATA,\r\n  HIDE_LOADING,\r\n  SHOW_LOADING,\r\n  SET_SORT_FIELDS,\r\n  SET_ROW_INFO,\r\n  SHOW_ERROR,\r\n  HIDE_ERROR,\r\n  SET_MODE_SELECTED,\r\n  SET_CURRENT_PAGE,\r\n  SET_SEARCH_WORD,\r\n} from \"./types\";\r\n\r\nexport const hideLoading = () => ({\r\n  type: HIDE_LOADING,\r\n});\r\nexport const showLoading = () => ({\r\n  type: SHOW_LOADING,\r\n});\r\n\r\nexport const fetchData = data => ({\r\n  type: FETCH_DATA,\r\n  payload: data,\r\n});\r\nexport const setRowInfo = data => ({\r\n  type: SET_ROW_INFO,\r\n  payload: data,\r\n});\r\nexport const setSortFields = data => ({\r\n  type: SET_SORT_FIELDS,\r\n  payload: data,\r\n});\r\n\r\nexport const showError = data => ({\r\n  type: SHOW_ERROR,\r\n  payload: data,\r\n});\r\nexport const hideError = data => ({\r\n  type: HIDE_ERROR,\r\n});\r\n\r\nexport const setModeSelected = data => ({\r\n  type: SET_MODE_SELECTED,\r\n});\r\nexport const setCurrentPage = data => ({\r\n  type: SET_CURRENT_PAGE,\r\n  payload: data,\r\n});\r\nexport const setSearchWord = data => ({\r\n  type: SET_SEARCH_WORD,\r\n  payload: data,\r\n});\r\n","import {\r\n  FETCH_DATA,\r\n  HIDE_ERROR,\r\n  HIDE_LOADING,\r\n  SET_CURRENT_PAGE,\r\n  SET_MODE_SELECTED,\r\n  SET_ROW_INFO,\r\n  SET_SEARCH_WORD,\r\n  SET_SORT_FIELDS,\r\n  SHOW_ERROR,\r\n  SHOW_LOADING,\r\n} from \"./types\";\r\n\r\nexport const rootReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case SHOW_LOADING:\r\n      return { ...state, loading: true };\r\n    case HIDE_LOADING:\r\n      return { ...state, loading: false };\r\n    case SHOW_ERROR:\r\n      return { ...state, error: action.payload };\r\n    case HIDE_ERROR:\r\n      return { ...state, error: null };\r\n    case FETCH_DATA:\r\n      return { ...state, items: action.payload };\r\n    case SET_SORT_FIELDS:\r\n      return { ...state, sort: action.payload };\r\n    case SET_ROW_INFO:\r\n      return { ...state, rowInfo: action.payload };\r\n    case SET_MODE_SELECTED:\r\n      return { ...state, modeSelected: true };\r\n    case SET_CURRENT_PAGE:\r\n      return { ...state, currentPage: action.payload };\r\n    case SET_SEARCH_WORD:\r\n      return { ...state, search: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const initialState = {\r\n  items: [],\r\n  sort: {\r\n    field: \"id\",\r\n    order: \"desc\",\r\n  },\r\n  rowInfo: {},\r\n  error: null,\r\n  loading: false,\r\n  modeSelected: false,\r\n  currentPage: 0,\r\n  search: \"\",\r\n};\r\n","export const RowInfo = ({ info: { firstName, lastName, phone, email } }) => {\r\n  return (\r\n    <div>\r\n      <h2>Info</h2>\r\n      <p>\r\n        Выбранный пользователь:{\" \"}\r\n        <b>\r\n          {firstName} {lastName}\r\n        </b>\r\n      </p>\r\n      <p>Телефон: {phone}</p>\r\n      <p>Email: {email}</p>\r\n    </div>\r\n  );\r\n};\r\n","export const ModeSelect = ({ onSelect }) => {\r\n  return (\r\n    <div>\r\n      <button className=\"btn btn-success\" onClick={() => onSelect(32)}>\r\n        32 элемента\r\n      </button>\r\n      &nbsp;\r\n      <button className=\"btn btn-danger\" onClick={() => onSelect(1000)}>\r\n        1000 элементов\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\n\r\nexport const TableSearch = ({ onSearch }) => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const onChangeHandler = e => setSearch(e.target.value);\r\n  const onSearchHandler = e => onSearch && onSearch(search);\r\n  return (\r\n    <div className=\"input-group mb-3\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control\"\r\n        placeholder=\"Enter username\"\r\n        aria-label=\"Enter username\"\r\n        aria-describedby=\"basic-addon2\"\r\n        value={search}\r\n        onChange={onChangeHandler}\r\n      />\r\n      <div className=\"input-group-append\">\r\n        <button className=\"btn btn-outline-secondary\" onClick={onSearchHandler}>\r\n          Поиск\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useReducer } from \"react\";\nimport ReactPaginate from \"react-paginate\";\n\nimport { orderBy } from \"lodash\";\n\nimport { Loader } from \"./components/Loader\";\nimport { Table } from \"./components/Table\";\n\nimport { LIST_ITEMS } from \"./api\";\n\nimport {\n  fetchData,\n  hideLoading,\n  setCurrentPage,\n  setModeSelected,\n  setRowInfo,\n  setSearchWord,\n  setSortFields,\n  showError,\n  showLoading,\n} from \"./reducer/actionCreators\";\nimport { rootReducer } from \"./reducer/index\";\nimport { initialState } from \"./reducer/state\";\n\nimport { RowInfo } from \"./components/RowInfo\";\nimport { ModeSelect } from \"./components/ModeSelect\";\nimport { TableSearch } from \"./components/TableSearch\";\n\nfunction App() {\n  const [state, dispatch] = useReducer(rootReducer, initialState);\n\n  const getItems = async url => {\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n\n      dispatch(fetchData(orderBy(data, state.sort.field, state.sort.order)));\n    } catch (e) {\n      dispatch(showError(e));\n    } finally {\n      dispatch(hideLoading());\n    }\n  };\n\n  const onSortHandler = (field, order) => {\n    const data = [...state.items];\n\n    dispatch(fetchData(orderBy(data, field, order)));\n    dispatch(setSortFields({ field, order }));\n  };\n\n  const onGetItemHandler = event => {\n    const { target } = event;\n    let tr = null;\n    if ((tr = target.closest(\"tr\") || target.tagName === \"tr\")) {\n      try {\n        const item = JSON.parse(tr.dataset.item);\n        dispatch(setRowInfo(item));\n      } catch (e) {\n        dispatch(showError(e));\n      }\n    }\n  };\n\n  const onSelectHandler = count => {\n    dispatch(setModeSelected());\n    dispatch(showLoading());\n\n    const url = new URL(LIST_ITEMS);\n    url.searchParams.set(\"rows\", count);\n    getItems(url);\n  };\n\n  const changePageHandler = ({ selected }) => {\n    dispatch(setCurrentPage(selected));\n  };\n\n  const onSearchHandler = value => {\n    dispatch(setSearchWord(value));\n    dispatch(setCurrentPage(0));\n  };\n\n  const getFilteredItems = () => {\n    const { items, search } = state;\n\n    if (!search) {\n      return items;\n    }\n    return items.filter(\n      item =>\n        item.firstName.toLowerCase().includes(state.search) ||\n        item.lastName.toLowerCase().includes(state.search) ||\n        item.email.toLowerCase().includes(state.search)\n    );\n  };\n\n  if (state.error) {\n    return state.error;\n  }\n\n  if (state.loading) {\n    return (\n      <div className=\"container py-4\">\n        <Loader align=\"center\" />\n      </div>\n    );\n  }\n\n  if (!state.modeSelected) {\n    return (\n      <div className=\"container text-center py-4\">\n        <ModeSelect onSelect={onSelectHandler} />\n      </div>\n    );\n  }\n\n  const pagesElementCount = 15;\n  const startIndex = pagesElementCount * state.currentPage;\n\n  const filteredData = getFilteredItems();\n  const chunkData = filteredData.slice(startIndex, startIndex + pagesElementCount);\n\n  return (\n    <div className=\"container py-4\">\n      <TableSearch onSearch={onSearchHandler} />\n\n      <Table items={chunkData} onSort={onSortHandler} onGetItem={onGetItemHandler} />\n\n      {filteredData.length > pagesElementCount ? (\n        <ReactPaginate\n          previousLabel={\"<\"}\n          nextLabel={\">\"}\n          breakLabel={\"...\"}\n          breakClassName={\"page-item\"}\n          breakLinkClassName=\"page-link\"\n          pageCount={Math.ceil(filteredData.length / pagesElementCount)}\n          marginPagesDisplayed={2}\n          pageRangeDisplayed={5}\n          onPageChange={changePageHandler}\n          containerClassName={\"pagination\"}\n          activeClassName={\"active\"}\n          pageClassName=\"page-item\"\n          pageLinkClassName=\"page-link\"\n          previousClassName=\"page-item\"\n          nextClassName=\"page-item\"\n          previousLinkClassName=\"page-link\"\n          nextLinkClassName=\"page-link\"\n          forcePage={state.currentPage}\n        />\n      ) : null}\n\n      {Object.keys(state.rowInfo).length > 0 && <RowInfo info={state.rowInfo} />}\n    </div>\n  );\n}\n\nexport default App;\n","export const LIST_ITEMS =\r\n  \"http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}\";\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}